[package]
name = "habasi"
version = "0.3.5"
authors = ["alvazir <basha.alvazir@gmail.com>"]
edition = "2021"
rust-version = "1.75.0"
description = "Habasi - TES3 plugin merging and utility tool"
readme = "README.md"
homepage = "https://www.nexusmods.com/morrowind/mods/53002"
repository = "https://github.com/alvazir/habasi"
license = "GPL-3.0-or-later"
keywords = ["TES3", "Morrowind", "OpenMW", "CLI"]
categories = ["command-line-utilities", "game development"]
publish = false

[badges]
maintenance = { status = "actively-developed" }

[dependencies.tes3]
# path = "../tes3"
git = "https://github.com/Greatness7/tes3"
rev = "f897f74"
# branch = "dev"
default-features = false
features = ["esp"]

[dependencies]
# CLI
clap = { version = "~4.5.20", features = ["derive", "suggestions", "wrap_help"] }
# settings file
confique = { version = "~0.2.6", default-features = false, features = ["toml"] }
# required by confique
serde = "~1.0.210"
# error management
anyhow = "~1.0.89"
# find openmw.cfg
dirs = "~5.0.1"
# find files in parallel
rayon = "~1.10.0"
# better fs errors
fs-err = "~2.11.0"
# references processing
hashbrown = { version = "~0.14.5", features = ["rayon"] }
# find files
walkdir = "~2.5.0"
# create id for sscr with empty id
crc = "~3.2.1"
# provide list of plugins via regex
regex = { version = "~1.11.0", default-features = false, features = ["std", "unicode-case"] }
# provide list of plugins via glob
glob = "~0.3.1"
# provide list of plugins via wildcards
wild = "~2.2.1"
# QOL for DRY
paste = "~1.0.15"
# memory usage
# peak_alloc = "~0.2.0" # disabled due to slowing down the program

[profile.dev]
debug = 0

[profile.release-lto]
inherits = "release"
strip = true
lto = true
panic = "abort"
codegen-units = 1

[profile.release-lto-darwin]
inherits = "release"
strip = false
lto = true
panic = "abort"
codegen-units = 1

[lints.rust]
warnings = { level = "warn", priority = -2 }
unsafe_code = "warn"
future_incompatible = { level = "warn", priority = -3 }
nonstandard_style = { level = "warn", priority = -3 }
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unused = { level = "warn", priority = -3 }

[lints.rustdoc]
missing_crate_level_docs = "warn"

[lints.clippy]
all = { level = "deny", priority = -1 } # Includes groups: correctness, suspicious, style, complexity, perf
# 4 more groups: pedantic, restriction, nursery, cargo
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }
multiple_crate_versions = { level = "allow", priority = 1 } # I have no idea how to overcome the underlying problem
restriction = { level = "warn", priority = -1 }
blanket_clippy_restriction_lints = { level = "allow", priority = 1 } # Disable warning about restriction group
self_named_module_files = { level = "allow", priority = 1 } # Matter of preference instead of mod_module_names
single_call_fn = { level = "allow", priority = 1 } # It's not bad
question_mark_used = "allow" # It's not bad
implicit_return = "allow" # More idiomatic
missing_docs_in_private_items = "allow" # It's not that bad
min_ident_chars = "allow" # One-letter variables are handy sometimes
std_instead_of_core = { level = "allow", priority = 1 } # I don't need no_std in this project
std_instead_of_alloc = { level = "allow", priority = 1 } # I don't need no_std in this project
ref_patterns = { level = "allow", priority = 1 } # Matter of preference
separated_literal_suffix = { level = "allow", priority = 1 } # I prefer separated
pub_with_shorthand = { level = "allow", priority = 1 } # I prefer 'super' to 'in super'
field_scoped_visibility_modifiers = { level = "allow", priority = 1 } # Scoped visibility methods are not needed in this project
single_char_lifetime_names = { level = "allow", priority = 1 } # Lifetimes are obvious in this project
